{% extends "commerce/_layouts/cp" %}

{% set selectedSubnavItem = 'bundles' %}
{% set bodyClass = (bodyClass is defined ? bodyClass~' ' : '') ~ "commerceproducts commerceproductsedit bundlesedit" %}

{% set crumbs = [
	{ label: 'Bundles' | t('commerce-bundles'), url: url('commerce-bundles') },
	{ label: bundleType.name | t('commerce-bundles'), url: url('commerce-bundles/bundles/' ~ bundleType.handle) },
] %}

{% set fullPageForm = true %}
{% set saveShortcutRedirect = continueEditingUrl %}

{#{% set products = craft.products.id(410,413) %}#}

{% import '_includes/forms' as forms %}
{% import 'commerce-bundles/bundles/_fields' as bundleFields %}

{% block header %}
<div class="flex flex-nowrap">
	{{ block('pageTitle') }}
	{{ block('contextMenu') }}
</div>
	<div class="flex">
		{% if showPreviewBtn or shareUrl is defined %}
			<div class="btngroup">
				{% if showPreviewBtn %}
					<div id="preview-btn" class="btn livepreviewbtn">{{ 'Preview'|t('app') }}</div>
				{% endif %}
				{% if shareUrl is defined %}
					<a id="share-btn" href="{{ shareUrl }}" class="btn sharebtn" target="_blank">{{ 'View'|t('app') }}</a>
				{% endif %}
			</div>
		{% endif %}
		
		{{ block('actionButton') }}
	</div>
{% endblock %}
	
	{% block actionButton %}
		<div id="save-btn-container" class="btngroup submit">
	<input type="submit" class="btn submit" value="{{ 'Save' | t('commerce-bundles') }}" />
	<div class="btn submit menubtn"></div>
	<div class="menu">
		<ul>
			<li>
				<a class="formsubmit" data-redirect="{{ continueEditingUrl | hash }}">
					{{ 'Save and continue editing' | t('commerce-bundles') }}
					{{ forms.optionShortcutLabel('S') }}
				</a>
			</li>

			{% if bundle.id %}
			<li>
				<a class="formsubmit" data-param="bundleId" data-value="" data-redirect="{{ continueEditingUrl | hash }}">
					{{ 'Save as a new bundle' | t('commerce-bundles') }}
				</a>
			</li>
			{% endif %}
		</ul>

		{% if bundle.id %}
		<hr />
		<ul>
			<li>
				<a class="formsubmit error" data-action="commerce-bundles/bundles/delete" data-confirm="{{ 'Are you sure you want to delete this bundle?' | t('commerce-bundles') }}" data-redirect="{{ 'commerce-bundles/bundles' | hash }}">
					{{ 'Delete' | t('commerce-bundles') }}
				</a>
			</li>
		</ul>
		{% endif %}
	</div>
</div>
{% endblock %}

{% block contextMenu %}
	
	{% if craft.app.getIsMultiSite() %}
	<div class="btn menubtn sitemenubtn" data-icon="world">{{ bundle.site.name | t('site') }}</div>
<div class="menu">
	<ul class="padded">
		{% for siteId in siteIds %}
			{% set site = craft.app.sites.getSiteById(siteId) %}
			{% set status = siteId in enabledSiteIds ? 'enabled' : 'disabled' %}

		<li>
			{% if siteId == bundle.siteId %}
			<a class="sel">
				<div class="status {{ status }}"></div>
				{{ site.name | t('site') }}
			</a>
			{% else %}
				{% set url = url('commerce-bundles/bundles/#{bundleTypeHandle}/#{craft.app.request.getSegment(4)}/#{site.handle}') %}

			<a href="{{ url }}" data-site-id="{{ siteId }}">
				<div class="status {{ status }}"></div>
				{{ site.name | t('site') }}
			</a>
			{% endif %}
		</li>
		{% endfor %}
	</ul>
</div>
{% endif %} {% endblock %}


{% block content %}
	<input type="hidden" name="action" value="commerce-bundles/bundles/save" />
	<input type="hidden" name="typeId" value="{{ bundleType.id }}" />
	{% if bundle.id %}<input type="hidden" name="bundleId" value="{{ bundle.id }}" />{% endif %}
	{% if craft.app.getIsMultiSite() %}
		<input type="hidden" name="siteId" value="{{ bundle.siteId }}">
	{% endif %}
	{{ redirectInput('commerce-bundles/bundles') }}
	{{ csrfInput() }}
<div id="fields" class="bundleProducts">
	{% for purchasableType in purchasableTypes %}
		{% set id = 'purchasables-'~purchasableType.elementType|id %}
		<div class="field first" id="{{id}}-field">
			<div class="heading">
				<label id="{{id}}-label" class="required" for="{{id}}">Please select the {{purchasableType.name}} and quantities for this bundle</label>
			</div>

			<input type="hidden" name="purchasables[{{purchasableType.elementType}}]" value="" />

			<div class="flex">
				<div id="{{id}}-Picker" class="elementselect">
					<div class="elements">
						{% for element in purchasables[purchasableType.elementType] ?? [] %} {% include "_elements/element" with { context: 'field', size: 'small', name: 'purchasables['~purchasableType.elementType~']' } %} {% endfor %}
					</div>
					<div class="btn add icon dashed">Choose {{purchasableType.name}}</div>
				</div>
			</div>
			{% if bundle.getErrors('purchasables-'~purchasableType.elementType|replace('\\','-')) %}
			<ul class="errors">
				{% for error in bundle.getErrors('purchasables-'~purchasableType.elementType|replace('\\','-')) %}
				<li>{{ error }}</li>
				{% endfor %}
			</ul>
			{% endif %} {% if bundle.getErrors('qtys') %}
			<ul class="errors">
				{% for error in bundle.getErrors('qtys') %}
				<li>{{ error }}</li>
				{% endfor %}
			</ul>
			{% endif %}
		</div>
	{% endfor %}
	{{ fieldsHtml|raw }}
</div>
	{% hook "cp.commerce.product.edit.content" %}
{% endblock %}

{% block details %}
<div class="meta">
	{{ bundleFields.generalMetaFields(bundle) }}

	{{ forms.lightswitchField({
            label: 'Enabled' | t('commerce-bundles'),
            id: 'enabled',
            name: 'enabled',
            on: bundle.enabled
        }) }}

	{% if craft.app.getIsMultiSite() %}
	{{ forms.lightswitchField({
                label: 'Enabled for site' | t('commerce-bundles'),
                id: 'enabledForSite',
                name: 'enabledForSite',
                on: bundle.enabledForSite
            }) }}
	{% endif %}
</div>

<div class="meta">
	{{ bundleFields.behavioralMetaFields(bundle) }}
</div>


<div class="meta">
	{{ bundleFields.generalFields(bundle) }}
	{% hook "cp.commerce.bundle.edit.price" %}
</div>

{% hook "cp.commerce.bundle.edit.meta" %}



{% if bundle.id %}
	
	
	<div class="meta">
	<div class="data">
		<h5 class="heading">{{ 'Date Created' | t('commerce-bundles') }}</h5>
		<div class="value">{{ bundle.dateCreated | date('short') }} {{ bundle.dateCreated | time('short') }}</div>
	</div>

	<div class="data">
		<h5 class="heading">{{ 'Date Updated' | t('commerce-bundles') }}</h5>
		<div class="value">{{ bundle.dateUpdated | date('short') }} {{ bundle.dateUpdated | time('short') }}</div>
	</div>
</div>
	{% hook "cp.commerce.product.edit.details" %}
{% endif %}
	{% if not bundle.slug %}
		{% js %}
			window.slugGenerator = new Craft.SlugGenerator('#title', '#slug');
		{% endjs %}
	{% endif %}
{% endblock %}
{% js %}
var elements = [];
var qty = [];
{% for purchasableType in purchasableTypes %}
	{% set id = 'purchasables-'~purchasableType.elementType|id %}
	{% set type = purchasableType.elementType|replace({'\\':'\\\\'}) %}

	elements['{{id}}'] = $('#{{id}}-Picker .element');
	qty['{{id}}'] = { {% for key,qty in bundle.qtys %}
				{% set value = qty > 0 ? qty : 1 %}
				{{ key ~ ':' ~ value }},
			{% endfor %}
		};
		//console.log(elements['{{id}}'])
	elements['{{id}}'].each(function(e) {
		var $this = $(this),
			id = $this.data('id');
		var $div = $('<div class="flex"></div>').appendTo($this);
			$div.append($this.find('.status'));
			$div.append($this.find('.label'));
			$div.append('<div class="label">Qty: <input type="number" min="1" class="text qty" data-id="'+id+'" name="qty['+id+']" value="'+qty['{{id}}'][id]+'" /></div>');
			$div.append($this.find('.icon'));
	})
	new Craft.BaseElementSelectInput({
		id: '{{id}}-Picker',
		name: 'purchasables[{{type}}]',
		elementType: '{{type}}',
		sources: null,
		criteria: null,
		sourceElementId: null,
		viewMode: 'list',
		limit: null,
		editable: false,
		sortable: false,
		selectable: false,
		modalStorageKey: null,
		fieldId: null,
		onSelectElements: function(e) {
			$.each(e, function(i) {
				console.log(this);
				var $el = $('#{{id}}-Picker .element[data-id="'+this.id+'"]');
				var $div = $('<div class="flex"></div>').appendTo($el);
				$div.append($el.find('.status'));
				$div.append($el.find('.label'));
				$div.append('<div class="label qty">Qty: <input type="number" min="1" class="text qty" data-id="'+this.id+'" name="qty['+this.id+']" value="1" /></div>');
				$div.append($el.find('.icon'));
			});
		},
	});
{% endfor %}
{% endjs %}
{% do view.registerAssetBundle("webdna\\commerce\\bundles\\assetbundles\\bundles\\BundlesAsset") %}
